You are an expert Python backend engineer.  
Generate production-grade Flask backend code for a project named **Weather Visualizer**.

Constraints:
- Only 1 file: `app.py`.
- Use Flask, Flask-CORS, requests, and environment variables.
- Required features:
  1. Get current weather by city/location
  2. Get 7-day forecast
  3. Store/retrieve user preferences
  4. Provide random “daily weather fun fact”
  5. Suggest activities based on weather
  6. Return Spotify playlists matched to weather (using Spotify API Client Credentials Flow)
  7. Return soothing background sound URLs mapped to weather condition
- Spotify API:
  - Use environment variables for `SPOTIFY_CLIENT_ID` and `SPOTIFY_CLIENT_SECRET`.
  - Authenticate using Client Credentials Flow.
  - Map weather conditions → playlists (Sunny → Happy Vibes, Rain → Lo-Fi Beats, Snow → Cozy Winter, etc.).
- Soothing Sounds:
  - Map weather conditions → audio URLs (Sunny → birds.mp3, Rainy → rain.mp3, Snow → fireplace.mp3, Storm → thunder.mp3).
- Scalable for Render deployment.